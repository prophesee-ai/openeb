name: All Build

on:
  push:
  pull_request:

env:
  #General variables
  numpy_version: "numpy==1.19.5" # replace with only 'numpy' if no version needed
  python_versions: 3.8
  pybind_version: "2.6.0"
  #Windows variables
  python_executable: "C:/hostedtoolcache/windows/Python/3.8.10/x64/python.exe" #Cmake needs this to find python on windows

jobs:
  job1:
    name: Ubuntu 20
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get -y update && sudo apt-get install -y sudo apt-utils wget cmake build-essential \
          libglew-dev git g++ libusb-1.0-0-dev libeigen3-dev libgtest-dev libssl-dev \
          python3-pip python3-distutils xvfb libglfw3 libglfw3-dev libglew-dev libopencv-dev ffmpeg \
          libboost-dev libboost-program-options-dev libboost-filesystem-dev libboost-timer-dev \
          libboost-chrono-dev libboost-thread-dev zip unzip git-lfs
          pip install opencv-python $numpy_version pytest

      - name: Build pybind
        run: |
          openebfolder=${PWD}
          cd ..
          wget https://github.com/pybind/pybind11/archive/v$pybind_version.zip
          unzip v$pybind_version.zip
          cd pybind11-$pybind_version/
          mkdir build && cd build
          cmake .. -DPYBIND11_TEST=OFF
          cmake --build . --config Release --parallel 4
          sudo make install

      - name: Build openEB
        run: |
          mkdir build && cd build
          cmake .. -DBUILD_TESTING=ON
          cmake --build . --config Release --parallel 4

      - name: Getting datasets from storage
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: upload_datasets.yaml
          workflow_conclusion: success
          name: datasets
          path: datasets

      - name: Run ctest
        run: |
          cd build
          ctest --output-on-failure

  job2:
    name: Ubuntu 18
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get -y update && sudo apt-get install -y sudo apt-utils wget cmake build-essential \
          libglew-dev git g++ libusb-1.0-0-dev libeigen3-dev libgtest-dev libssl-dev \
          python3-pip python3-distutils xvfb libglfw3 libglfw3-dev libglew-dev libopencv-dev ffmpeg \
          libboost-dev libboost-program-options-dev libboost-filesystem-dev libboost-timer-dev \
          libboost-chrono-dev libboost-thread-dev zip unzip
          python3 -m pip install --upgrade pip
          python3 -m pip install opencv-python $numpy_version pytest

      - name: Build pybind and gtest
        run: |
          openebfolder=${PWD}
          cd ..
          wget https://github.com/pybind/pybind11/archive/v$pybind_version.zip
          unzip v$pybind_version.zip
          cd pybind11-$pybind_version/
          mkdir build && cd build
          cmake .. -DPYBIND11_TEST=OFF
          cmake --build . --config Release --parallel 4
          sudo make install
          cp -r /usr/src/googletest/googletest ${openebfolder}/../
          cd ${openebfolder}/../googletest
          mkdir build && cd build
          cmake ..
          cmake --build . --config Release --parallel 4
          sudo make install

      - name: Build openEB
        run: |
          mkdir build && cd build
          cmake .. -DBUILD_TESTING=ON
          cmake --build . --config Release --parallel 4

      - name: Getting datasets from storage
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: upload_datasets.yaml
          workflow_conclusion: success
          name: datasets
          path: datasets

      - name: Run ctest
        run: |
          cd build
          ctest --output-on-failure

  job3:
    name: Windows
    runs-on: windows-2019
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ env.python_versions }}

      - name: Download vcpkg binaries
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: upload_win_binaries.yaml
          workflow_conclusion: success
          name: vcpkg_binaries
          path: ".."

      - name: Install python and vcpkg dependencies
        shell: bash
        run: |
          cd ..
          unzip -q "vcpkg-export.zip"
          py -$python_versions -m pip install pytest $numpy_version opencv-python
          cd openeb

      - name: Build openEB
        shell: bash
        run: |
          mkdir build && cd build
          cmake -A x64 -DCMAKE_TOOLCHAIN_FILE="../../vcpkg/scripts/buildsystems/vcpkg.cmake" \
                -D Python3_EXECUTABLE=$python_executable \
                -DBUILD_TESTING=ON ..
          cmake --build . --config Release --parallel 4

      - name: Getting datasets from storage
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: upload_datasets.yaml
          workflow_conclusion: success
          name: datasets
          path: datasets

      - name: Ctest suite
        shell: powershell
        run: |
          cd build
          ctest -C Release --output-on-failure
